"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlowingIconContainer = GlowingIconContainer;
exports.InfoCard = InfoCard;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var React = _interopRequireWildcard(require("react"));
var _styles = require("@mui/material/styles");
var _Box = _interopRequireDefault(require("@mui/material/Box"));
var _Paper = _interopRequireDefault(require("@mui/material/Paper"));
var _Typography = _interopRequireDefault(require("@mui/material/Typography"));
var _Link = require("../Link");
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["classNameDescription", "classNameTitle", "dense", "description", "icon", "link", "svg", "title", "titleProps"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function GlowingIconContainer({
  icon
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Box.default, {
    sx: theme => (0, _extends2.default)({
      width: 40,
      height: 40,
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      flexShrink: 0,
      borderRadius: 1,
      border: '1px solid',
      borderColor: 'primary.200',
      bgcolor: 'primary.50',
      boxShadow: `0px 0 0 2px ${(0, _styles.alpha)(theme.palette.primary[500], 0.1)}, 0px 2px 12px 0px rgba(234, 237, 241, 0.3) inset`
    }, theme.applyDarkStyles({
      borderColor: (0, _styles.alpha)(theme.palette.primary[400], 0.25),
      bgcolor: (0, _styles.alpha)(theme.palette.primary[900], 0.4),
      boxShadow: `0 0 0 2px ${(0, _styles.alpha)(theme.palette.primary[600], 0.1)}, 0px 2px 12px 0px rgba(0, 0, 0, 0.25) inset`
    })),
    children: icon
  });
}
function InfoCard(props) {
  const {
      classNameDescription,
      classNameTitle,
      dense,
      description,
      icon,
      link,
      svg,
      title,
      titleProps
    } = props,
    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Paper.default, (0, _extends2.default)({
    variant: "outlined",
    component: link ? _Link.Link : 'div',
    href: link
  }, link ? {
    noLinkStyle: true,
    // Fix overloading with prefetch={false}, only prefetch on hover.
    prefetch: false
  } : {}, {
    sx: theme => (0, _extends2.default)({
      p: dense ? 2.5 : 3.5,
      height: '100%',
      background: `${(theme.vars || theme).palette.gradients.linearSubtle}`
    }, theme.applyDarkStyles({
      bgcolor: (0, _styles.alpha)(theme.palette.primaryDark[800], 0.25),
      background: `${(theme.vars || theme).palette.gradients.linearSubtle}`,
      borderColor: 'primaryDark.700'
    }))
  }, other, {
    children: [svg && svg, icon && /*#__PURE__*/(0, _jsxRuntime.jsx)(GlowingIconContainer, {
      icon: icon
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Typography.default, (0, _extends2.default)({
      fontWeight: "bold",
      component: "h3",
      color: "text.primary",
      variant: "body2",
      mt: icon ? 2 : 0,
      mb: description ? 0.5 : 0,
      className: classNameTitle
    }, titleProps, {
      children: title
    })), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Typography.default, {
      variant: "body2",
      color: "text.secondary",
      className: classNameDescription,
      children: description
    })]
  }));
}