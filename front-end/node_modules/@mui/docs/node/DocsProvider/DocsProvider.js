"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocsProvider = DocsProvider;
exports.useDocsConfig = useDocsConfig;
var React = _interopRequireWildcard(require("react"));
var _i18n = require("../i18n");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const DocsConfigContext = /*#__PURE__*/React.createContext(null);
function DocsProvider({
  config,
  defaultUserLanguage,
  translations,
  children
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(DocsConfigContext.Provider, {
    value: config,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_i18n.UserLanguageProvider, {
      defaultUserLanguage: defaultUserLanguage,
      translations: translations,
      children: children
    })
  });
}
function useDocsConfig() {
  const config = React.useContext(DocsConfigContext);
  if (!config) {
    throw new Error('Could not find docs config context value; please ensure the component is wrapped in a <DocsProvider>');
  }
  return config;
}