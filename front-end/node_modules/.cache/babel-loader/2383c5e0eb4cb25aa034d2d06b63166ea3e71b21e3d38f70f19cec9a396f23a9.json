{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\TS\\\\budget-typescript\\\\src\\\\Context\\\\BudgetAndExpense\\\\BudgetAndExpense.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { v4 as uuidV4 } from \"uuid\";\nimport FlashMsg from '../../Components/FlashMsg/FlashMsg.tsx';\nimport useLocalStorage from \"../../hooks/useLocalStorage/useLocalStorage.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UNCATEGORIZED_BUDGETID = \"其他\";\nconst BudgetContext = /*#__PURE__*/React.createContext(null);\nexport function useBudget() {\n  _s();\n  return useContext(BudgetContext);\n}\n\n// 這是名為\"其他\"的預設預算卡，但不會預設他的預算額度\n_s(useBudget, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst UncategorizedBudget = {\n  id: UNCATEGORIZED_BUDGETID,\n  name: UNCATEGORIZED_BUDGETID,\n  max: 0\n};\nexport default function BudgetAndExpenseContext({\n  children\n}) {\n  _s2();\n  const [showLogInAlert, setShowLogInAlert] = useState(false);\n  const [showFectDataAlert, setShowFetchDataAlert] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // 一載入就檢查是否logged in\n  useEffect(() => {\n    const checkLogInStatus = async () => {\n      try {\n        // 讓fetch request去挾帶cookie\n        const response = await fetch(\"http://localhost:5000/isLoggedIn\", {\n          credentials: \"include\"\n        });\n        const res = await response.json();\n        console.log(res);\n\n        // then we fetch the budgets and expenses data from DB \n        if (res.isLoggedIn) {\n          console.log(\"fetch budgets from DB\");\n          const getData = async () => {\n            try {\n              const response = await fetch(\"http://localhost:5000/getBudgets\", {\n                credentials: \"include\"\n              });\n              if (!response.ok) {\n                console.log(\"Failed to fetch budget data\");\n                setShowLogInAlert(true);\n              }\n              const data = await response.json();\n              console.log(data);\n              setBudgets(data);\n            } catch (error) {\n              console.log(\"Catch error when fetch budgets data\", error);\n              setShowLogInAlert(true);\n            }\n          };\n          getData();\n          setIsLoggedIn(true);\n        }\n      } catch (error) {\n        setShowLogInAlert(true);\n      }\n    };\n    checkLogInStatus();\n  }, [isLoggedIn]);\n  console.log(\"is logged in\", isLoggedIn);\n\n  // 用三元表達式去操作log in跟訪客的資料\n  const [budgets, setBudgets] = useLocalStorage(\"budgets\", []);\n  const [expenses, setExpenses] = useLocalStorage(\"expenses\", []);\n  function LogIn() {\n    setIsLoggedIn(true);\n  }\n  function LogOut() {\n    setIsLoggedIn(false);\n  }\n  function getBudgetExpenses(budgetID) {\n    return expenses.filter(expense => expense.budgetID === budgetID);\n  }\n  function isBudgetNameExist(budgetName) {\n    return budgets.some(budget => budget.name === budgetName);\n  }\n  function updateBudget(budgetID, name, max) {\n    setBudgets(prevBudgets => {\n      return prevBudgets.map(budget => {\n        if (budget.id === budgetID) {\n          if (name === \"\") {\n            return {\n              ...budget,\n              max\n            };\n          } else if (Number.isNaN(max)) {\n            return {\n              ...budget,\n              name\n            };\n          }\n          return {\n            ...budget,\n            name,\n            max\n          };\n        } else {\n          return budget;\n        }\n      });\n    });\n  }\n  function updateExpense(newBudgetID, id, description, amount) {\n    setExpenses(preExpenses => preExpenses.map(preExpense => {\n      if (preExpense.id === id) {\n        return {\n          ...preExpense,\n          budgetID: newBudgetID,\n          description: description,\n          amount: amount\n        };\n      } else {\n        return preExpense;\n      }\n    }));\n  }\n  function findBudgetFromBudgetID(budgetID) {\n    return budgets.find(budget => budget.id === budgetID);\n  }\n  function addBudget(name, max) {\n    const id = uuidV4();\n    const data = {\n      id,\n      name,\n      max\n    };\n    fetch(\"http://localhost:5000/createBudget\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(data)\n    });\n    setBudgets(prevBudgets => {\n      name = name.trim();\n      // 指派的變數對應的名稱相同就不用寫成 name: name, max: max，直接寫就好\n      return [{\n        id,\n        name,\n        max\n      }, ...prevBudgets];\n    });\n    console.log(\"add budget\");\n  }\n  function addExpense(budgetID, amount, description) {\n    const id = uuidV4();\n    const date = Date.now();\n    const data = {\n      id,\n      budgetID,\n      description,\n      amount,\n      date\n    };\n    fetch(\"http://localhost:5000/createExpense\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(data)\n    });\n    setExpenses(prevExpenses => {\n      description = description.trim();\n      return [{\n        budgetID,\n        id,\n        amount,\n        description,\n        date\n      }, ...prevExpenses];\n    });\n    console.log(\"add expense\");\n  }\n  function deleteBudget(budgetID) {\n    setBudgets(preBudgets => {\n      return preBudgets.filter(budget => budget.id !== budgetID);\n    });\n    setExpenses(preExpense => {\n      return preExpense.filter(expense => expense.budgetID !== budgetID);\n    });\n  }\n  function deleteExpense(expenseID) {\n    setExpenses(preExpense => {\n      return preExpense.filter(expense => expense.id !== expenseID);\n    });\n  }\n  return (\n    /*#__PURE__*/\n    // 如果日後要後端資料加載很久可以考慮加上spinner\n    _jsxDEV(BudgetContext.Provider, {\n      value: {\n        budgets,\n        expenses,\n        isLoggedIn,\n        LogIn,\n        LogOut,\n        getBudgetExpenses,\n        isBudgetNameExist,\n        findBudgetFromBudgetID,\n        updateBudget,\n        updateExpense,\n        addExpense,\n        addBudget,\n        deleteBudget,\n        deleteExpense\n      },\n      children: [/*#__PURE__*/_jsxDEV(FlashMsg, {\n        show: showLogInAlert,\n        handleClose: () => {\n          setShowLogInAlert(false);\n        },\n        type: \"error\",\n        message: '網路連線或伺服器錯誤! 無法登入'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FlashMsg, {\n        show: showFectDataAlert,\n        handleClose: () => {\n          setShowFetchDataAlert(false);\n        },\n        type: \"error\",\n        message: \"無法取得伺服器資料，請檢查網路連線後重試\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s2(BudgetAndExpenseContext, \"8GeWA0ABaXqILkb7XijX6UIGCN8=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = BudgetAndExpenseContext;\nvar _c;\n$RefreshReg$(_c, \"BudgetAndExpenseContext\");","map":{"version":3,"names":["React","useContext","useEffect","useState","v4","uuidV4","FlashMsg","useLocalStorage","jsxDEV","_jsxDEV","UNCATEGORIZED_BUDGETID","BudgetContext","createContext","useBudget","_s","UncategorizedBudget","id","name","max","BudgetAndExpenseContext","children","_s2","showLogInAlert","setShowLogInAlert","showFectDataAlert","setShowFetchDataAlert","isLoggedIn","setIsLoggedIn","checkLogInStatus","response","fetch","credentials","res","json","console","log","getData","ok","data","setBudgets","error","budgets","expenses","setExpenses","LogIn","LogOut","getBudgetExpenses","budgetID","filter","expense","isBudgetNameExist","budgetName","some","budget","updateBudget","prevBudgets","map","Number","isNaN","updateExpense","newBudgetID","description","amount","preExpenses","preExpense","findBudgetFromBudgetID","find","addBudget","method","headers","body","JSON","stringify","trim","addExpense","date","Date","now","prevExpenses","deleteBudget","preBudgets","deleteExpense","expenseID","Provider","value","show","handleClose","type","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/TS/budget-typescript/src/Context/BudgetAndExpense/BudgetAndExpense.tsx"],"sourcesContent":["import React, {ReactNode, useContext, useEffect, useState} from 'react'\r\nimport {v4 as uuidV4} from \"uuid\"\r\n\r\nimport FlashMsg from '../../Components/FlashMsg/FlashMsg.tsx'\r\nimport useLocalStorage from \"../../hooks/useLocalStorage/useLocalStorage.ts\"\r\nimport { useBudgetFromDB } from '../../hooks/useDB/useDB.ts'\r\n\r\nexport interface budgetObject {\r\n  id:string,\r\n  name:string,\r\n  max:number\r\n} \r\n\r\nexport interface expenseObject {\r\n  id:string,\r\n  budgetID:string,\r\n  amount:number,\r\n  description:string\r\n  date: number\r\n}\r\n\r\nexport interface BudgetAndExpenseData {\r\n  budgets: budgetObject[],\r\n  expenses: expenseObject[],\r\n  isLoggedIn: boolean,\r\n  LogIn: () => void,\r\n  LogOut: () => void,\r\n  getBudgetExpenses: (budgetID:string) => expenseObject[],\r\n  isBudgetNameExist:(budgetName: string) => boolean,\r\n  findBudgetFromBudgetID: (budget: string) => budgetObject,\r\n  updateBudget: (budget: string, name: string, max: number) => void,\r\n  updateExpense:(newBudgetID:string, id:string, name:string, amount:number) => void,\r\n  addBudget: (name:string, max:number) => void,\r\n  addExpense: (budgetID:string, amount:number, description:string ) => void,\r\n  deleteBudget: (budgetID: string) => void,\r\n  deleteExpense: (expenseID: string) => void\r\n}\r\n\r\nexport const UNCATEGORIZED_BUDGETID = \"其他\"\r\n\r\nconst BudgetContext = React.createContext<BudgetAndExpenseData | null>(null)\r\n\r\nexport function useBudget(): BudgetAndExpenseData | null {\r\n  return useContext(BudgetContext)\r\n}\r\n\r\n// 這是名為\"其他\"的預設預算卡，但不會預設他的預算額度\r\nconst UncategorizedBudget:budgetObject = {\r\n  id:UNCATEGORIZED_BUDGETID,\r\n  name:UNCATEGORIZED_BUDGETID,\r\n  max: 0\r\n}\r\n\r\nexport default function BudgetAndExpenseContext( {children} : {children:ReactNode} ) {\r\n  const [showLogInAlert, setShowLogInAlert] = useState<boolean>(false)\r\n  const [showFectDataAlert, setShowFetchDataAlert] = useState<boolean>(false)\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false)\r\n\r\n  // 一載入就檢查是否logged in\r\n  useEffect(()=>{\r\n    const checkLogInStatus = async () => {\r\n      try {\r\n        // 讓fetch request去挾帶cookie\r\n        const response = await fetch(\"http://localhost:5000/isLoggedIn\", {credentials: \"include\"})\r\n        const res = await response.json()\r\n        console.log(res)\r\n        \r\n        // then we fetch the budgets and expenses data from DB \r\n        if (res.isLoggedIn) {\r\n          console.log(\"fetch budgets from DB\")\r\n          const getData = async () => {\r\n              try {\r\n                  const response = await fetch(\"http://localhost:5000/getBudgets\", { credentials: \"include\" });\r\n                  if (!response.ok) {\r\n                      console.log(\"Failed to fetch budget data\");\r\n                      setShowLogInAlert(true)\r\n                  }\r\n                  const data = await response.json();\r\n                  console.log(data)\r\n                  setBudgets(data);\r\n              } catch (error) {\r\n                  console.log(\"Catch error when fetch budgets data\", error);\r\n                  setShowLogInAlert(true)\r\n              }\r\n          };\r\n          getData();\r\n          setIsLoggedIn(true)\r\n        }\r\n      } catch(error) {\r\n        setShowLogInAlert(true)\r\n      }\r\n    }\r\n    checkLogInStatus()\r\n  }, [isLoggedIn])\r\n  console.log(\"is logged in\", isLoggedIn)\r\n\r\n  // 用三元表達式去操作log in跟訪客的資料\r\n  const [budgets, setBudgets] = useLocalStorage<budgetObject[]>(\"budgets\", [])\r\n  const [expenses, setExpenses] = useLocalStorage<expenseObject[]>(\"expenses\", [])\r\n\r\n  function LogIn() {\r\n    setIsLoggedIn(true)\r\n  }\r\n\r\n  function LogOut() {\r\n    setIsLoggedIn(false)\r\n  }\r\n\r\n  function getBudgetExpenses(budgetID:string): expenseObject[] {\r\n    return expenses.filter(expense => expense.budgetID === budgetID)\r\n  }\r\n\r\n  function isBudgetNameExist(budgetName:string): boolean {\r\n    return budgets.some(budget => budget.name === budgetName);\r\n  }\r\n\r\n  function updateBudget(budgetID: string, name: string, max: number): void {\r\n    setBudgets( prevBudgets => {\r\n      return (\r\n        prevBudgets.map((budget)=> {\r\n          if (budget.id === budgetID) {\r\n            if (name === \"\") {\r\n              return {...budget, max}\r\n            } else if (Number.isNaN(max)) {\r\n              return {...budget, name}\r\n            }\r\n            return {...budget, name, max}\r\n          } else {\r\n            return budget\r\n          }\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  function updateExpense(newBudgetID:string, id:string, description:string, amount:number) {\r\n    setExpenses(preExpenses => \r\n      preExpenses.map(preExpense => {\r\n        if (preExpense.id === id) {\r\n          return {...preExpense, budgetID:newBudgetID, description:description, amount:amount}\r\n        } else {\r\n          return preExpense\r\n        }\r\n      })\r\n    )\r\n  } \r\n\r\n  function findBudgetFromBudgetID(budgetID: string): budgetObject {\r\n    return budgets.find(budget => budget.id === budgetID) as budgetObject\r\n  }\r\n\r\n  function addBudget(name:string, max:number): void {\r\n    const id = uuidV4()\r\n    const data: budgetObject = {\r\n      id,\r\n      name,\r\n      max\r\n    }\r\n    fetch(\"http://localhost:5000/createBudget\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials:\"include\",\r\n      body: JSON.stringify(data)\r\n    });\r\n\r\n    setBudgets( prevBudgets => {\r\n        name = name.trim()\r\n        // 指派的變數對應的名稱相同就不用寫成 name: name, max: max，直接寫就好\r\n        return [{id, name, max}, ...prevBudgets]\r\n      }\r\n    )\r\n    console.log(\"add budget\")\r\n  }\r\n\r\n  function addExpense(budgetID:string, amount:number, description:string): void {\r\n    const id = uuidV4()\r\n    const date = Date.now()\r\n    const data: expenseObject = {\r\n      id,\r\n      budgetID,\r\n      description,\r\n      amount,\r\n      date\r\n    }\r\n\r\n    fetch(\"http://localhost:5000/createExpense\", {\r\n      method:\"POST\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      credentials:\"include\",\r\n      body:JSON.stringify(data)\r\n    })\r\n\r\n    setExpenses(prevExpenses => {\r\n      description = description.trim()\r\n      return [{budgetID, id, amount, description, date}, ...prevExpenses]\r\n    })\r\n\r\n    console.log(\"add expense\")\r\n  }\r\n\r\n  function deleteBudget(budgetID: string): void {\r\n    setBudgets(preBudgets => {\r\n      return preBudgets.filter(budget => budget.id !== budgetID)\r\n    })\r\n\r\n    setExpenses(preExpense => {\r\n      return preExpense.filter(expense => expense.budgetID !== budgetID)\r\n    })\r\n  }\r\n\r\n  function deleteExpense(expenseID: string): void {\r\n    setExpenses(preExpense => {\r\n      return preExpense.filter(expense => expense.id !== expenseID)\r\n    })\r\n  }\r\n\r\n  return (\r\n    // 如果日後要後端資料加載很久可以考慮加上spinner\r\n    <BudgetContext.Provider value={{\r\n      budgets,\r\n      expenses,\r\n      isLoggedIn,\r\n      LogIn,\r\n      LogOut,\r\n      getBudgetExpenses,\r\n      isBudgetNameExist,\r\n      findBudgetFromBudgetID,\r\n      updateBudget,\r\n      updateExpense,\r\n      addExpense,\r\n      addBudget,\r\n      deleteBudget,\r\n      deleteExpense\r\n    }}>\r\n      <FlashMsg show={showLogInAlert} handleClose={()=> {\r\n        setShowLogInAlert(false)} } type={\"error\"} message={'網路連線或伺服器錯誤! 無法登入'} />\r\n      <FlashMsg show={showFectDataAlert} handleClose={()=> \r\n        {setShowFetchDataAlert(false)}} type={\"error\"} message={\"無法取得伺服器資料，請檢查網路連線後重試\"}/>\r\n      {children}\r\n    </BudgetContext.Provider>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}