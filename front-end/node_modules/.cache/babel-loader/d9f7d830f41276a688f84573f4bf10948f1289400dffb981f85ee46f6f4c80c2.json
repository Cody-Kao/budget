{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\TS\\\\budget-typescript\\\\src\\\\Components\\\\SignInModal\\\\SignInModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Modal, Form, InputGroup, Button, Alert } from \"react-bootstrap\";\nimport Spinner from '../Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignInModal({\n  isSignInOpen,\n  handleSignInClose\n}) {\n  _s();\n  const [accountErrorMsg, setAccountErrorMsg] = useState(\"\");\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const accountRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  // 因為在關閉事件之中不只是要關閉Modal，也要把alert清掉，所以用一個wrapper function來一次做兩件事情\n  function handleSignInCloseWrapper() {\n    setShowAlert(false);\n    handleSignInClose();\n  }\n  function handleAccountChange() {\n    var _accountRef$current;\n    const account = (_accountRef$current = accountRef.current) === null || _accountRef$current === void 0 ? void 0 : _accountRef$current.value;\n    if (account.length === 0) {\n      setAccountErrorMsg(\"帳號不得為空\");\n      return;\n    }\n    setAccountErrorMsg(\"\");\n  }\n  function handlePasswordChange() {\n    var _passwordRef$current;\n    const password = (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value;\n\n    // Check if password is empty\n    if (!password) {\n      setPasswordErrorMsg(\"密碼不得為空\");\n      return;\n    }\n\n    // Check if password contains non-English letters and numbers\n    if (/[^A-Za-z0-9]/.test(password)) {\n      setPasswordErrorMsg(\"密碼只能包含英文字母和數字\");\n      return;\n    }\n\n    // Regular expression to validate password\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]+$/;\n\n    // Check if password matches the regex\n    if (!passwordRegex.test(password)) {\n      setPasswordErrorMsg(\"密碼必須包含至少一個大寫英文字母和數字\");\n      return;\n    }\n\n    // Password meets all requirements\n    setPasswordErrorMsg(\"\");\n  }\n  function handleSubmit(e) {\n    var _accountRef$current2, _passwordRef$current2;\n    setIsLoading(true);\n    e.preventDefault();\n    e.stopPropagation();\n    const account = (_accountRef$current2 = accountRef.current) === null || _accountRef$current2 === void 0 ? void 0 : _accountRef$current2.value;\n    const password = (_passwordRef$current2 = passwordRef.current) === null || _passwordRef$current2 === void 0 ? void 0 : _passwordRef$current2.value;\n    if (account.length === 0) {\n      setAccountErrorMsg(\"帳號不得為空\");\n      setIsLoading(false);\n      return;\n    }\n    if (password.length === 0) {\n      setPasswordErrorMsg(\"密碼不得為空\");\n      setIsLoading(false);\n      return;\n    }\n    const data = {\n      account,\n      password\n    };\n    const send = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/signIn\", {\n          method: \"POSt\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        });\n        const responseData = await response.json();\n\n        // type === true means success, false otherwise\n        if (responseData.type) {\n          // 加入成功的提示\n          console.log(responseData.msg);\n          // 關閉登入Modal\n          handleSignInClose();\n        } else {\n          // 查看是哪個環節出問題\n          switch (responseData.target) {\n            case \"account\":\n              setAccountErrorMsg(responseData.msg);\n              break;\n            case \"password\":\n              setPasswordErrorMsg(responseData.msg);\n              break;\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setShowAlert(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    send();\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: isSignInOpen,\n    onHide: () => handleSignInCloseWrapper(),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"\\u767B\\u5165\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setShowAlert(false),\n          dismissible: true,\n          children: \"\\u7DB2\\u8DEF\\u9023\\u7DDA\\u6216\\u4F3A\\u670D\\u5668\\u554F\\u984C\\uFF0C\\u8ACB\\u6AA2\\u67E5\\u5F8C\\u91CD\\u8A66\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fw-bold\",\n            children: \"\\u5E33\\u865F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: accountRef,\n              \"aria-describedby\": \"inputGroupPrepend\",\n              required: true,\n              isInvalid: accountErrorMsg !== \"\",\n              onChange: () => {\n                handleAccountChange();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: accountErrorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fw-bold\",\n            children: \"\\u5BC6\\u78BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: passwordRef,\n              \"aria-describedby\": \"inputGroupPrepend\",\n              required: true,\n              isInvalid: passwordErrorMsg !== \"\",\n              onChange: () => {\n                handlePasswordChange();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: passwordErrorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"checkBox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            // prettier-ignore\n            type: \"checkbox\",\n            label: \"記住我\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"\\u767B\\u5165\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n_s(SignInModal, \"LUDh6BUZ+7fLsI6l1PWuEJJJ6Zs=\");\n_c = SignInModal;\nvar _c;\n$RefreshReg$(_c, \"SignInModal\");","map":{"version":3,"names":["React","useRef","useState","Modal","Form","InputGroup","Button","Alert","Spinner","jsxDEV","_jsxDEV","SignInModal","isSignInOpen","handleSignInClose","_s","accountErrorMsg","setAccountErrorMsg","passwordErrorMsg","setPasswordErrorMsg","isLoading","setIsLoading","showAlert","setShowAlert","accountRef","passwordRef","handleSignInCloseWrapper","handleAccountChange","_accountRef$current","account","current","value","length","handlePasswordChange","_passwordRef$current","password","test","passwordRegex","handleSubmit","e","_accountRef$current2","_passwordRef$current2","preventDefault","stopPropagation","data","send","response","fetch","method","headers","body","JSON","stringify","responseData","json","type","console","log","msg","target","error","show","onHide","children","noValidate","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","onClose","dismissible","Group","className","controlId","Label","hasValidation","Control","ref","required","isInvalid","onChange","Feedback","Check","label","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/TS/budget-typescript/src/Components/SignInModal/SignInModal.tsx"],"sourcesContent":["import React, { FormEvent, useRef, useState } from 'react'\r\nimport { Modal, Form, InputGroup, Button, Alert } from \"react-bootstrap\"\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\n\r\ntype SignInModalProps = {\r\n    isSignInOpen: boolean\r\n    handleSignInClose:() => void\r\n}\r\n\r\nexport default function SignInModal({isSignInOpen, handleSignInClose}:SignInModalProps) {\r\n    const [accountErrorMsg, setAccountErrorMsg] = useState<string>(\"\")\r\n    const [passwordErrorMsg, setPasswordErrorMsg] = useState<string>(\"\")\r\n    const [isLoading, setIsLoading] = useState<boolean>(false)\r\n    const [showAlert, setShowAlert] = useState<boolean>(false)\r\n    const accountRef = useRef<HTMLInputElement>(null)\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n\r\n    // 因為在關閉事件之中不只是要關閉Modal，也要把alert清掉，所以用一個wrapper function來一次做兩件事情\r\n    function handleSignInCloseWrapper() {\r\n        setShowAlert(false)\r\n        handleSignInClose()\r\n    }\r\n\r\n    function handleAccountChange() {\r\n        const account = accountRef.current?.value\r\n        if (account!.length === 0) {\r\n            setAccountErrorMsg(\"帳號不得為空\")\r\n            return\r\n        }\r\n\r\n        setAccountErrorMsg(\"\")\r\n    }\r\n\r\n    function handlePasswordChange() {\r\n        const password = passwordRef.current?.value;\r\n    \r\n        // Check if password is empty\r\n        if (!password) {\r\n            setPasswordErrorMsg(\"密碼不得為空\");\r\n            return;\r\n        }\r\n\r\n        // Check if password contains non-English letters and numbers\r\n        if (/[^A-Za-z0-9]/.test(password)) {\r\n            setPasswordErrorMsg(\"密碼只能包含英文字母和數字\");\r\n            return;\r\n        }\r\n    \r\n        // Regular expression to validate password\r\n        const passwordRegex = /^(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]+$/;\r\n    \r\n        // Check if password matches the regex\r\n        if (!passwordRegex.test(password)) {\r\n            setPasswordErrorMsg(\"密碼必須包含至少一個大寫英文字母和數字\");\r\n            return;\r\n        }\r\n    \r\n        // Password meets all requirements\r\n        setPasswordErrorMsg(\"\");\r\n    }\r\n\r\n    function handleSubmit(e:FormEvent<HTMLFormElement>) {\r\n        setIsLoading(true)\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        const account = accountRef.current?.value\r\n        const password = passwordRef.current?.value\r\n\r\n        if (account!.length === 0) {\r\n            setAccountErrorMsg(\"帳號不得為空\")\r\n            setIsLoading(false)\r\n            return\r\n        }\r\n\r\n        if (password!.length === 0) {\r\n            setPasswordErrorMsg(\"密碼不得為空\")\r\n            setIsLoading(false)\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            account,\r\n            password\r\n        }\r\n\r\n        const send = async() => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/signIn\", {\r\n                    method:\"POSt\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\"\r\n                    },\r\n                    body:JSON.stringify(data)\r\n                })\r\n                const responseData = await response.json()\r\n\r\n                // type === true means success, false otherwise\r\n                if (responseData.type) {\r\n                    // 加入成功的提示\r\n                    console.log(responseData.msg)\r\n                    // 關閉登入Modal\r\n                    handleSignInClose()\r\n                    \r\n                } else {\r\n                    // 查看是哪個環節出問題\r\n                    switch (responseData.target){\r\n                        case \"account\":\r\n                            setAccountErrorMsg(responseData.msg)\r\n                            break\r\n                        case \"password\":\r\n                            setPasswordErrorMsg(responseData.msg)\r\n                            break\r\n                    }\r\n                }\r\n            } catch(error) {\r\n                console.log(error)\r\n                setShowAlert(true)\r\n            } finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n        send()\r\n    }\r\n    \r\n\r\n    return (\r\n        <Modal show={isSignInOpen} onHide={() => handleSignInCloseWrapper()}>\r\n            <Form noValidate onSubmit={(e) => handleSubmit(e)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        登入\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {showAlert && (\r\n                        <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\r\n                            網路連線或伺服器問題，請檢查後重試\r\n                        </Alert>)\r\n                    }\r\n                    <Form.Group className='mb-3' controlId=\"name\">\r\n                        <Form.Label className='fw-bold'>帳號</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                ref={accountRef}\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                                isInvalid={accountErrorMsg !== \"\"}\r\n                                onChange={() => {handleAccountChange()}}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {accountErrorMsg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className='mb-3' controlId=\"name\">\r\n                        <Form.Label className='fw-bold'>密碼</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                ref={passwordRef}\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                                isInvalid={passwordErrorMsg !== \"\"}\r\n                                onChange={() => {handlePasswordChange()}}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {passwordErrorMsg}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className='mb-3' controlId=\"checkBox\">\r\n                        <Form.Check // prettier-ignore\r\n                            type={\"checkbox\"}\r\n                            label={\"記住我\"}\r\n                        />\r\n                    </Form.Group>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        {isLoading ? <Spinner /> :\r\n                                    <Button variant='primary' type='submit'>登入</Button>\r\n                        }\r\n                    </div>\r\n                </Modal.Body>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}